// magic-string@0.30.17 downloaded from https://ga.jspm.io/npm:magic-string@0.30.17/dist/magic-string.es.mjs

import{encode as t}from"@jridgewell/sourcemap-codec";class BitSet{constructor(t){this.bits=t instanceof BitSet?t.bits.slice():[]}add(t){this.bits[t>>5]|=1<<(t&31)}has(t){return!!(this.bits[t>>5]&1<<(t&31))}}class Chunk{constructor(t,e,n){this.start=t;this.end=e;this.original=n;this.intro="";this.outro="";this.content=n;this.storeName=false;this.edited=false;this.previous=null;this.next=null}appendLeft(t){this.outro+=t}appendRight(t){this.intro=this.intro+t}clone(){const t=new Chunk(this.start,this.end,this.original);t.intro=this.intro;t.outro=this.outro;t.content=this.content;t.storeName=this.storeName;t.edited=this.edited;return t}contains(t){return this.start<t&&t<this.end}eachNext(t){let e=this;while(e){t(e);e=e.next}}eachPrevious(t){let e=this;while(e){t(e);e=e.previous}}edit(t,e,n){this.content=t;if(!n){this.intro="";this.outro=""}this.storeName=e;this.edited=true;return this}prependLeft(t){this.outro=t+this.outro}prependRight(t){this.intro=t+this.intro}reset(){this.intro="";this.outro="";if(this.edited){this.content=this.original;this.storeName=false;this.edited=false}}split(t){const e=t-this.start;const n=this.original.slice(0,e);const i=this.original.slice(e);this.original=n;const r=new Chunk(t,this.end,i);r.outro=this.outro;this.outro="";this.end=t;if(this.edited){r.edit("",false);this.content=""}else this.content=n;r.next=this.next;r.next&&(r.next.previous=r);r.previous=this;this.next=r;return r}toString(){return this.intro+this.content+this.outro}trimEnd(t){this.outro=this.outro.replace(t,"");if(this.outro.length)return true;const e=this.content.replace(t,"");if(e.length){if(e!==this.content){this.split(this.start+e.length).edit("",void 0,true);this.edited&&this.edit(e,this.storeName,true)}return true}this.edit("",void 0,true);this.intro=this.intro.replace(t,"");return!!this.intro.length||void 0}trimStart(t){this.intro=this.intro.replace(t,"");if(this.intro.length)return true;const e=this.content.replace(t,"");if(e.length){if(e!==this.content){const t=this.split(this.end-e.length);this.edited&&t.edit(e,this.storeName,true);this.edit("",void 0,true)}return true}this.edit("",void 0,true);this.outro=this.outro.replace(t,"");return!!this.outro.length||void 0}}function e(){return typeof globalThis!=="undefined"&&typeof globalThis.btoa==="function"?t=>globalThis.btoa(unescape(encodeURIComponent(t))):typeof Buffer==="function"?t=>Buffer.from(t,"utf-8").toString("base64"):()=>{throw new Error("Unsupported environment: `window.btoa` or `Buffer` should be supported.")}}const n=e();class SourceMap{constructor(e){this.version=3;this.file=e.file;this.sources=e.sources;this.sourcesContent=e.sourcesContent;this.names=e.names;this.mappings=t(e.mappings);typeof e.x_google_ignoreList!=="undefined"&&(this.x_google_ignoreList=e.x_google_ignoreList);typeof e.debugId!=="undefined"&&(this.debugId=e.debugId)}toString(){return JSON.stringify(this)}toUrl(){return"data:application/json;charset=utf-8;base64,"+n(this.toString())}}function i(t){const e=t.split("\n");const n=e.filter((t=>/^\t+/.test(t)));const i=e.filter((t=>/^ {2,}/.test(t)));if(n.length===0&&i.length===0)return null;if(n.length>=i.length)return"\t";const r=i.reduce(((t,e)=>{const n=/^ +/.exec(e)[0].length;return Math.min(n,t)}),Infinity);return new Array(r+1).join(" ")}function r(t,e){const n=t.split(/[/\\]/);const i=e.split(/[/\\]/);n.pop();while(n[0]===i[0]){n.shift();i.shift()}if(n.length){let t=n.length;while(t--)n[t]=".."}return n.concat(i).join("/")}const s=Object.prototype.toString;function o(t){return s.call(t)==="[object Object]"}function h(t){const e=t.split("\n");const n=[];for(let t=0,i=0;t<e.length;t++){n.push(i);i+=e[t].length+1}return function(t){let e=0;let i=n.length;while(e<i){const r=e+i>>1;t<n[r]?i=r:e=r+1}const r=e-1;const s=t-n[r];return{line:r,column:s}}}const a=/\w/;class Mappings{constructor(t){this.hires=t;this.generatedCodeLine=0;this.generatedCodeColumn=0;this.raw=[];this.rawSegments=this.raw[this.generatedCodeLine]=[];this.pending=null}addEdit(t,e,n,i){if(e.length){const r=e.length-1;let s=e.indexOf("\n",0);let o=-1;while(s>=0&&r>s){const r=[this.generatedCodeColumn,t,n.line,n.column];i>=0&&r.push(i);this.rawSegments.push(r);this.generatedCodeLine+=1;this.raw[this.generatedCodeLine]=this.rawSegments=[];this.generatedCodeColumn=0;o=s;s=e.indexOf("\n",s+1)}const h=[this.generatedCodeColumn,t,n.line,n.column];i>=0&&h.push(i);this.rawSegments.push(h);this.advance(e.slice(o+1))}else if(this.pending){this.rawSegments.push(this.pending);this.advance(e)}this.pending=null}addUneditedChunk(t,e,n,i,r){let s=e.start;let o=true;let h=false;while(s<e.end){if(n[s]==="\n"){i.line+=1;i.column=0;this.generatedCodeLine+=1;this.raw[this.generatedCodeLine]=this.rawSegments=[];this.generatedCodeColumn=0;o=true;h=false}else{if(this.hires||o||r.has(s)){const e=[this.generatedCodeColumn,t,i.line,i.column];if(this.hires==="boundary")if(a.test(n[s])){if(!h){this.rawSegments.push(e);h=true}}else{this.rawSegments.push(e);h=false}else this.rawSegments.push(e)}i.column+=1;this.generatedCodeColumn+=1;o=false}s+=1}this.pending=null}advance(t){if(!t)return;const e=t.split("\n");if(e.length>1){for(let t=0;t<e.length-1;t++){this.generatedCodeLine++;this.raw[this.generatedCodeLine]=this.rawSegments=[]}this.generatedCodeColumn=0}this.generatedCodeColumn+=e[e.length-1].length}}const l="\n";const u={insertLeft:false,insertRight:false,storeName:false};class MagicString{constructor(t,e={}){const n=new Chunk(0,t.length,t);Object.defineProperties(this,{original:{writable:true,value:t},outro:{writable:true,value:""},intro:{writable:true,value:""},firstChunk:{writable:true,value:n},lastChunk:{writable:true,value:n},lastSearchedChunk:{writable:true,value:n},byStart:{writable:true,value:{}},byEnd:{writable:true,value:{}},filename:{writable:true,value:e.filename},indentExclusionRanges:{writable:true,value:e.indentExclusionRanges},sourcemapLocations:{writable:true,value:new BitSet},storedNames:{writable:true,value:{}},indentStr:{writable:true,value:void 0},ignoreList:{writable:true,value:e.ignoreList},offset:{writable:true,value:e.offset||0}});this.byStart[0]=n;this.byEnd[t.length]=n}addSourcemapLocation(t){this.sourcemapLocations.add(t)}append(t){if(typeof t!=="string")throw new TypeError("outro content must be a string");this.outro+=t;return this}appendLeft(t,e){t+=this.offset;if(typeof e!=="string")throw new TypeError("inserted content must be a string");this._split(t);const n=this.byEnd[t];n?n.appendLeft(e):this.intro+=e;return this}appendRight(t,e){t+=this.offset;if(typeof e!=="string")throw new TypeError("inserted content must be a string");this._split(t);const n=this.byStart[t];n?n.appendRight(e):this.outro+=e;return this}clone(){const t=new MagicString(this.original,{filename:this.filename,offset:this.offset});let e=this.firstChunk;let n=t.firstChunk=t.lastSearchedChunk=e.clone();while(e){t.byStart[n.start]=n;t.byEnd[n.end]=n;const i=e.next;const r=i&&i.clone();if(r){n.next=r;r.previous=n;n=r}e=i}t.lastChunk=n;this.indentExclusionRanges&&(t.indentExclusionRanges=this.indentExclusionRanges.slice());t.sourcemapLocations=new BitSet(this.sourcemapLocations);t.intro=this.intro;t.outro=this.outro;return t}generateDecodedMap(t){t=t||{};const e=0;const n=Object.keys(this.storedNames);const i=new Mappings(t.hires);const s=h(this.original);this.intro&&i.advance(this.intro);this.firstChunk.eachNext((t=>{const r=s(t.start);t.intro.length&&i.advance(t.intro);t.edited?i.addEdit(e,t.content,r,t.storeName?n.indexOf(t.original):-1):i.addUneditedChunk(e,t,this.original,r,this.sourcemapLocations);t.outro.length&&i.advance(t.outro)}));return{file:t.file?t.file.split(/[/\\]/).pop():void 0,sources:[t.source?r(t.file||"",t.source):t.file||""],sourcesContent:t.includeContent?[this.original]:void 0,names:n,mappings:i.raw,x_google_ignoreList:this.ignoreList?[e]:void 0}}generateMap(t){return new SourceMap(this.generateDecodedMap(t))}_ensureindentStr(){this.indentStr===void 0&&(this.indentStr=i(this.original))}_getRawIndentString(){this._ensureindentStr();return this.indentStr}getIndentString(){this._ensureindentStr();return this.indentStr===null?"\t":this.indentStr}indent(t,e){const n=/^[^\r\n]/gm;if(o(t)){e=t;t=void 0}if(t===void 0){this._ensureindentStr();t=this.indentStr||"\t"}if(t==="")return this;e=e||{};const i={};if(e.exclude){const t=typeof e.exclude[0]==="number"?[e.exclude]:e.exclude;t.forEach((t=>{for(let e=t[0];e<t[1];e+=1)i[e]=true}))}let r=e.indentStart!==false;const s=e=>{if(r)return`${t}${e}`;r=true;return e};this.intro=this.intro.replace(n,s);let h=0;let a=this.firstChunk;while(a){const e=a.end;if(a.edited){if(!i[h]){a.content=a.content.replace(n,s);a.content.length&&(r=a.content[a.content.length-1]==="\n")}}else{h=a.start;while(h<e){if(!i[h]){const e=this.original[h];if(e==="\n")r=true;else if(e!=="\r"&&r){r=false;if(h===a.start)a.prependRight(t);else{this._splitChunk(a,h);a=a.next;a.prependRight(t)}}}h+=1}}h=a.end;a=a.next}this.outro=this.outro.replace(n,s);return this}insert(){throw new Error("magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)")}insertLeft(t,e){if(!u.insertLeft){console.warn("magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead");u.insertLeft=true}return this.appendLeft(t,e)}insertRight(t,e){if(!u.insertRight){console.warn("magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead");u.insertRight=true}return this.prependRight(t,e)}move(t,e,n){t+=this.offset;e+=this.offset;n+=this.offset;if(n>=t&&n<=e)throw new Error("Cannot move a selection inside itself");this._split(t);this._split(e);this._split(n);const i=this.byStart[t];const r=this.byEnd[e];const s=i.previous;const o=r.next;const h=this.byStart[n];if(!h&&r===this.lastChunk)return this;const a=h?h.previous:this.lastChunk;s&&(s.next=o);o&&(o.previous=s);a&&(a.next=i);h&&(h.previous=r);i.previous||(this.firstChunk=r.next);if(!r.next){this.lastChunk=i.previous;this.lastChunk.next=null}i.previous=a;r.next=h||null;a||(this.firstChunk=i);h||(this.lastChunk=r);return this}overwrite(t,e,n,i){i=i||{};return this.update(t,e,n,{...i,overwrite:!i.contentOnly})}update(t,e,n,i){t+=this.offset;e+=this.offset;if(typeof n!=="string")throw new TypeError("replacement content must be a string");if(this.original.length!==0){while(t<0)t+=this.original.length;while(e<0)e+=this.original.length}if(e>this.original.length)throw new Error("end is out of bounds");if(t===e)throw new Error("Cannot overwrite a zero-length range – use appendLeft or prependRight instead");this._split(t);this._split(e);if(i===true){if(!u.storeName){console.warn("The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string");u.storeName=true}i={storeName:true}}const r=i!==void 0&&i.storeName;const s=i!==void 0&&i.overwrite;if(r){const n=this.original.slice(t,e);Object.defineProperty(this.storedNames,n,{writable:true,value:true,enumerable:true})}const o=this.byStart[t];const h=this.byEnd[e];if(o){let t=o;while(t!==h){if(t.next!==this.byStart[t.end])throw new Error("Cannot overwrite across a split point");t=t.next;t.edit("",false)}o.edit(n,r,!s)}else{const i=new Chunk(t,e,"").edit(n,r);h.next=i;i.previous=h}return this}prepend(t){if(typeof t!=="string")throw new TypeError("outro content must be a string");this.intro=t+this.intro;return this}prependLeft(t,e){t+=this.offset;if(typeof e!=="string")throw new TypeError("inserted content must be a string");this._split(t);const n=this.byEnd[t];n?n.prependLeft(e):this.intro=e+this.intro;return this}prependRight(t,e){t+=this.offset;if(typeof e!=="string")throw new TypeError("inserted content must be a string");this._split(t);const n=this.byStart[t];n?n.prependRight(e):this.outro=e+this.outro;return this}remove(t,e){t+=this.offset;e+=this.offset;if(this.original.length!==0){while(t<0)t+=this.original.length;while(e<0)e+=this.original.length}if(t===e)return this;if(t<0||e>this.original.length)throw new Error("Character is out of bounds");if(t>e)throw new Error("end must be greater than start");this._split(t);this._split(e);let n=this.byStart[t];while(n){n.intro="";n.outro="";n.edit("");n=e>n.end?this.byStart[n.end]:null}return this}reset(t,e){t+=this.offset;e+=this.offset;if(this.original.length!==0){while(t<0)t+=this.original.length;while(e<0)e+=this.original.length}if(t===e)return this;if(t<0||e>this.original.length)throw new Error("Character is out of bounds");if(t>e)throw new Error("end must be greater than start");this._split(t);this._split(e);let n=this.byStart[t];while(n){n.reset();n=e>n.end?this.byStart[n.end]:null}return this}lastChar(){if(this.outro.length)return this.outro[this.outro.length-1];let t=this.lastChunk;do{if(t.outro.length)return t.outro[t.outro.length-1];if(t.content.length)return t.content[t.content.length-1];if(t.intro.length)return t.intro[t.intro.length-1]}while(t=t.previous);return this.intro.length?this.intro[this.intro.length-1]:""}lastLine(){let t=this.outro.lastIndexOf(l);if(t!==-1)return this.outro.substr(t+1);let e=this.outro;let n=this.lastChunk;do{if(n.outro.length>0){t=n.outro.lastIndexOf(l);if(t!==-1)return n.outro.substr(t+1)+e;e=n.outro+e}if(n.content.length>0){t=n.content.lastIndexOf(l);if(t!==-1)return n.content.substr(t+1)+e;e=n.content+e}if(n.intro.length>0){t=n.intro.lastIndexOf(l);if(t!==-1)return n.intro.substr(t+1)+e;e=n.intro+e}}while(n=n.previous);t=this.intro.lastIndexOf(l);return t!==-1?this.intro.substr(t+1)+e:this.intro+e}slice(t=0,e=this.original.length-this.offset){t+=this.offset;e+=this.offset;if(this.original.length!==0){while(t<0)t+=this.original.length;while(e<0)e+=this.original.length}let n="";let i=this.firstChunk;while(i&&(i.start>t||i.end<=t)){if(i.start<e&&i.end>=e)return n;i=i.next}if(i&&i.edited&&i.start!==t)throw new Error(`Cannot use replaced character ${t} as slice start anchor.`);const r=i;while(i){!i.intro||r===i&&i.start!==t||(n+=i.intro);const s=i.start<e&&i.end>=e;if(s&&i.edited&&i.end!==e)throw new Error(`Cannot use replaced character ${e} as slice end anchor.`);const o=r===i?t-i.start:0;const h=s?i.content.length+e-i.end:i.content.length;n+=i.content.slice(o,h);!i.outro||s&&i.end!==e||(n+=i.outro);if(s)break;i=i.next}return n}snip(t,e){const n=this.clone();n.remove(0,t);n.remove(e,n.original.length);return n}_split(t){if(this.byStart[t]||this.byEnd[t])return;let e=this.lastSearchedChunk;const n=t>e.end;while(e){if(e.contains(t))return this._splitChunk(e,t);e=n?this.byStart[e.end]:this.byEnd[e.start]}}_splitChunk(t,e){if(t.edited&&t.content.length){const n=h(this.original)(e);throw new Error(`Cannot split a chunk that has already been edited (${n.line}:${n.column} – "${t.original}")`)}const n=t.split(e);this.byEnd[e]=t;this.byStart[e]=n;this.byEnd[n.end]=n;t===this.lastChunk&&(this.lastChunk=n);this.lastSearchedChunk=t;return true}toString(){let t=this.intro;let e=this.firstChunk;while(e){t+=e.toString();e=e.next}return t+this.outro}isEmpty(){let t=this.firstChunk;do{if(t.intro.length&&t.intro.trim()||t.content.length&&t.content.trim()||t.outro.length&&t.outro.trim())return false}while(t=t.next);return true}length(){let t=this.firstChunk;let e=0;do{e+=t.intro.length+t.content.length+t.outro.length}while(t=t.next);return e}trimLines(){return this.trim("[\\r\\n]")}trim(t){return this.trimStart(t).trimEnd(t)}trimEndAborted(t){const e=new RegExp((t||"\\s")+"+$");this.outro=this.outro.replace(e,"");if(this.outro.length)return true;let n=this.lastChunk;do{const t=n.end;const i=n.trimEnd(e);if(n.end!==t){this.lastChunk===n&&(this.lastChunk=n.next);this.byEnd[n.end]=n;this.byStart[n.next.start]=n.next;this.byEnd[n.next.end]=n.next}if(i)return true;n=n.previous}while(n);return false}trimEnd(t){this.trimEndAborted(t);return this}trimStartAborted(t){const e=new RegExp("^"+(t||"\\s")+"+");this.intro=this.intro.replace(e,"");if(this.intro.length)return true;let n=this.firstChunk;do{const t=n.end;const i=n.trimStart(e);if(n.end!==t){n===this.lastChunk&&(this.lastChunk=n.next);this.byEnd[n.end]=n;this.byStart[n.next.start]=n.next;this.byEnd[n.next.end]=n.next}if(i)return true;n=n.next}while(n);return false}trimStart(t){this.trimStartAborted(t);return this}hasChanged(){return this.original!==this.toString()}_replaceRegexp(t,e){function n(t,n){return typeof e==="string"?e.replace(/\$(\$|&|\d+)/g,((e,n)=>{if(n==="$")return"$";if(n==="&")return t[0];const i=+n;return i<t.length?t[+n]:`$${n}`})):e(...t,t.index,n,t.groups)}function i(t,e){let n;const i=[];while(n=t.exec(e))i.push(n);return i}if(t.global){const e=i(t,this.original);e.forEach((t=>{if(t.index!=null){const e=n(t,this.original);e!==t[0]&&this.overwrite(t.index,t.index+t[0].length,e)}}))}else{const e=this.original.match(t);if(e&&e.index!=null){const t=n(e,this.original);t!==e[0]&&this.overwrite(e.index,e.index+e[0].length,t)}}return this}_replaceString(t,e){const{original:n}=this;const i=n.indexOf(t);i!==-1&&this.overwrite(i,i+t.length,e);return this}replace(t,e){return typeof t==="string"?this._replaceString(t,e):this._replaceRegexp(t,e)}_replaceAllString(t,e){const{original:n}=this;const i=t.length;for(let r=n.indexOf(t);r!==-1;r=n.indexOf(t,r+i)){const t=n.slice(r,r+i);t!==e&&this.overwrite(r,r+i,e)}return this}replaceAll(t,e){if(typeof t==="string")return this._replaceAllString(t,e);if(!t.global)throw new TypeError("MagicString.prototype.replaceAll called with a non-global RegExp argument");return this._replaceRegexp(t,e)}}const c=Object.prototype.hasOwnProperty;class Bundle{constructor(t={}){this.intro=t.intro||"";this.separator=t.separator!==void 0?t.separator:"\n";this.sources=[];this.uniqueSources=[];this.uniqueSourceIndexByFilename={}}addSource(t){if(t instanceof MagicString)return this.addSource({content:t,filename:t.filename,separator:this.separator});if(!o(t)||!t.content)throw new Error("bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`");["filename","ignoreList","indentExclusionRanges","separator"].forEach((e=>{c.call(t,e)||(t[e]=t.content[e])}));t.separator===void 0&&(t.separator=this.separator);if(t.filename)if(c.call(this.uniqueSourceIndexByFilename,t.filename)){const e=this.uniqueSources[this.uniqueSourceIndexByFilename[t.filename]];if(t.content.original!==e.content)throw new Error(`Illegal source: same filename (${t.filename}), different contents`)}else{this.uniqueSourceIndexByFilename[t.filename]=this.uniqueSources.length;this.uniqueSources.push({filename:t.filename,content:t.content.original})}this.sources.push(t);return this}append(t,e){this.addSource({content:new MagicString(t),separator:e&&e.separator||""});return this}clone(){const t=new Bundle({intro:this.intro,separator:this.separator});this.sources.forEach((e=>{t.addSource({filename:e.filename,content:e.content.clone(),separator:e.separator})}));return t}generateDecodedMap(t={}){const e=[];let n;this.sources.forEach((t=>{Object.keys(t.content.storedNames).forEach((t=>{~e.indexOf(t)||e.push(t)}))}));const i=new Mappings(t.hires);this.intro&&i.advance(this.intro);this.sources.forEach(((t,r)=>{r>0&&i.advance(this.separator);const s=t.filename?this.uniqueSourceIndexByFilename[t.filename]:-1;const o=t.content;const a=h(o.original);o.intro&&i.advance(o.intro);o.firstChunk.eachNext((n=>{const r=a(n.start);n.intro.length&&i.advance(n.intro);t.filename?n.edited?i.addEdit(s,n.content,r,n.storeName?e.indexOf(n.original):-1):i.addUneditedChunk(s,n,o.original,r,o.sourcemapLocations):i.advance(n.content);n.outro.length&&i.advance(n.outro)}));o.outro&&i.advance(o.outro);if(t.ignoreList&&s!==-1){n===void 0&&(n=[]);n.push(s)}}));return{file:t.file?t.file.split(/[/\\]/).pop():void 0,sources:this.uniqueSources.map((e=>t.file?r(t.file,e.filename):e.filename)),sourcesContent:this.uniqueSources.map((e=>t.includeContent?e.content:null)),names:e,mappings:i.raw,x_google_ignoreList:n}}generateMap(t){return new SourceMap(this.generateDecodedMap(t))}getIndentString(){const t={};this.sources.forEach((e=>{const n=e.content._getRawIndentString();if(n!==null){t[n]||(t[n]=0);t[n]+=1}}));return Object.keys(t).sort(((e,n)=>t[e]-t[n]))[0]||"\t"}indent(t){arguments.length||(t=this.getIndentString());if(t==="")return this;let e=!this.intro||this.intro.slice(-1)==="\n";this.sources.forEach(((n,i)=>{const r=n.separator!==void 0?n.separator:this.separator;const s=e||i>0&&/\r?\n$/.test(r);n.content.indent(t,{exclude:n.indentExclusionRanges,indentStart:s});e=n.content.lastChar()==="\n"}));this.intro&&(this.intro=t+this.intro.replace(/^[^\n]/gm,((e,n)=>n>0?t+e:e)));return this}prepend(t){this.intro=t+this.intro;return this}toString(){const t=this.sources.map(((t,e)=>{const n=t.separator!==void 0?t.separator:this.separator;const i=(e>0?n:"")+t.content.toString();return i})).join("");return this.intro+t}isEmpty(){return(!this.intro.length||!this.intro.trim())&&!this.sources.some((t=>!t.content.isEmpty()))}length(){return this.sources.reduce(((t,e)=>t+e.content.length()),this.intro.length)}trimLines(){return this.trim("[\\r\\n]")}trim(t){return this.trimStart(t).trimEnd(t)}trimStart(t){const e=new RegExp("^"+(t||"\\s")+"+");this.intro=this.intro.replace(e,"");if(!this.intro){let e;let n=0;do{e=this.sources[n++];if(!e)break}while(!e.content.trimStartAborted(t))}return this}trimEnd(t){const e=new RegExp((t||"\\s")+"+$");let n;let i=this.sources.length-1;do{n=this.sources[i--];if(!n){this.intro=this.intro.replace(e,"");break}}while(!n.content.trimEndAborted(t));return this}}export{Bundle,SourceMap,MagicString as default};

