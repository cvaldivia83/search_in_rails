// @ampproject/remapping@2.3.0 downloaded from https://ga.jspm.io/npm:@ampproject/remapping@2.3.0/dist/remapping.umd.js

import*as e from"@jridgewell/trace-mapping";import*as n from"@jridgewell/gen-mapping";var t=e;try{"default"in e&&(t=e.default)}catch(e){}var o=n;try{"default"in n&&(o=n.default)}catch(e){}var r={};(function(e,n){r=n(t,o)})(0,(function(e,n){const t=SegmentObject("",-1,-1,"",null,false);const o=[];function SegmentObject(e,n,t,o,r,c){return{source:e,line:n,column:t,name:o,content:r,ignore:c}}function Source(e,n,t,o,r){return{map:e,sources:n,source:t,content:o,ignore:r}}function MapSource(e,n){return Source(e,n,"",null,false)}function OriginalSource(e,n,t){return Source(null,o,e,n,t)}function traceMappings(o){const r=new n.GenMapping({file:o.map.file});const{sources:c,map:s}=o;const i=s.names;const u=e.decodedMappings(s);for(let e=0;e<u.length;e++){const o=u[e];for(let s=0;s<o.length;s++){const u=o[s];const a=u[0];let l=t;if(u.length!==1){const e=c[u[1]];l=originalPositionFor(e,u[2],u[3],u.length===5?i[u[4]]:"");if(l==null)continue}const{column:p,line:g,name:f,content:m,source:d,ignore:h}=l;n.maybeAddSegment(r,e,a,d,g,p,f);d&&m!=null&&n.setSourceContent(r,d,m);h&&n.setIgnore(r,d,true)}}return r}function originalPositionFor(n,o,r,c){if(!n.map)return SegmentObject(n.source,o,r,c,n.content,n.ignore);const s=e.traceSegment(n.map,o,r);return s==null?null:s.length===1?t:originalPositionFor(n.sources[s[1]],s[2],s[3],s.length===5?n.map.names[s[4]]:c)}function asArray(e){return Array.isArray(e)?e:[e]}function buildSourceMapTree(n,t){const o=asArray(n).map((n=>new e.TraceMap(n,"")));const r=o.pop();for(let e=0;e<o.length;e++)if(o[e].sources.length>1)throw new Error(`Transformation map ${e} must have exactly one source file.\nDid you specify these with the most recent transformation maps first?`);let c=build(r,t,"",0);for(let e=o.length-1;e>=0;e--)c=MapSource(o[e],[c]);return c}function build(n,t,o,r){const{resolvedSources:c,sourcesContent:s,ignoreList:i}=n;const u=r+1;const a=c.map(((n,r)=>{const c={importer:o,depth:u,source:n||"",content:void 0,ignore:void 0};const a=t(c.source,c);const{source:l,content:p,ignore:g}=c;if(a)return build(new e.TraceMap(a,l),t,l,u);const f=p!==void 0?p:s?s[r]:null;const m=g!==void 0?g:!!i&&i.includes(r);return OriginalSource(l,f,m)}));return MapSource(n,a)}class SourceMap{constructor(e,t){const o=t.decodedMappings?n.toDecodedMap(e):n.toEncodedMap(e);this.version=o.version;this.file=o.file;this.mappings=o.mappings;this.names=o.names;this.ignoreList=o.ignoreList;this.sourceRoot=o.sourceRoot;this.sources=o.sources;t.excludeContent||(this.sourcesContent=o.sourcesContent)}toString(){return JSON.stringify(this)}}function remapping(e,n,t){const o=typeof t==="object"?t:{excludeContent:!!t,decodedMappings:false};const r=buildSourceMapTree(e,n);return new SourceMap(traceMappings(r),o)}return remapping}));var c=r;export{c as default};

